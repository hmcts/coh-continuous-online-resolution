plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.0.4.RELEASE'
    id 'org.springframework.boot' version '2.0.2.RELEASE'
    id 'org.owasp.dependencycheck' version '3.1.2'
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'org.sonarqube' version '2.6.2'
    id 'jacoco'
//    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.0.11"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'com.github.ben-manes.versions'

group 'uk.gov.hmcts.reform.coh'
version '0.0.1'
sourceCompatibility = 1.8
mainClassName = 'uk.gov.hmcts.reform.coh.Application'

configurations {
    aatCompile.extendsFrom(testCompile)
    aatRuntime.extendsFrom(testRuntime)
}

repositories {
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
    mavenLocal()
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.tomcat.embed'
                && details.requested.name == 'tomcat-embed-core'
                && details.requested.version == '8.5.29') {

            details.useVersion "8.5.34"
            details.because "https://nvd.nist.gov/vuln/detail/CVE-2018-8034"
        }
        if (details.requested.group == 'com.fasterxml.jackson.core'
                && details.requested.name == 'jackson-databind'
                && details.requested.version == '2.9.5') {

            details.useVersion "2.9.8"
            details.because "https://github.com/FasterXML/jackson-databind/issues/2186"
        }
    }
}

dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'false' ? 11 : 0
    suppressionFile = 'dependency-check-suppressions.xml'
    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

apply from: 'liquibase.gradle'

def versions = [
        postgresql         : '42.2.2',
        springBoot         : '2.0.2.RELEASE',
        springfoxSwagger   : '2.7.0',
        h2                 : '1.4.197',
        liquibase          : '3.5.3',
        shedlock           : '2.2.1'
]

dependencies {
    compile("io.springfox:springfox-swagger2:${versions.springfoxSwagger}")
    compile("io.springfox:springfox-swagger-ui:${versions.springfoxSwagger}")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile( 'org.apache.httpcomponents:httpclient:4.5.5')
    compile("org.liquibase:liquibase-core:${versions.liquibase}")
    compile("org.postgresql:postgresql:${versions.postgresql}")
    compile group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: versions.shedlock
    compile group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: versions.shedlock
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'com.microsoft.azure', name: 'applicationinsights-core', version: '2.1.1'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-core', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-spring', version: '1.2.5'
    testCompile("com.h2database:h2:${versions.h2}")
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: '3.0.1'
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: '4.0.0'
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '2.0.0'
    compile group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.3'
}

bootJar {
    baseName 'continuous-online-hearing'
    archiveName = "$baseName"+".jar"
    destinationDir = file("$rootDir/build/libs")
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

def coverageExclusionList = [
        '**uk/gov/hmcts/reform/coh/Application*',
        '**uk/gov/hmcts/reform/coh/appinsights/*',
        '**uk/gov/hmcts/reform/coh/domain/*',
]

//(jacocoTestReport | jacocoTestCoverageVerification)
jacoco {
    toolVersion = '0.7.9' // jacocoMavenPluginVersion
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: coverageExclusionList)
        })
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.exclusions", coverageExclusionList.join(", ")
    }
}

sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir('src/aat/java')
        }
        resources {
            srcDir('src/aat/resources')
        }
    }
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/coh/functional/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/coh/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

dependencyCheck {
    suppressionFile = 'dependency-check-suppressions.xml'
}
